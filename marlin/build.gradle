group 'marlin'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: "scala"
apply plugin: 'idea'
// apply plugin: 'application'
// apply plugin: "com.github.johnrengelman.shadow"

[compileScala, compileTestScala, compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }

    test {
        scala {
            srcDirs = ['src/test/scala', 'src/test/java']
        }
        java {
            srcDirs = []
        }
    }
}

task "createDirs" << {
    sourceSets*.scala.srcDirs*.each { it.mkdirs() }
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileScala {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
//    scalaCompileOptions.useCompileDaemon = true
    scalaCompileOptions.deprecation = true
    scalaCompileOptions.failOnError = true
    scalaCompileOptions.unchecked = true
    scalaCompileOptions.additionalParameters = ['-feature']
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task scaladocJar(type: Jar, dependsOn: scaladoc) {
    classifier = 'javadoc'
    from scaladoc.destinationDir
}

task testJar(type: Jar, dependsOn: compileTestScala) {
    from compileTestScala.destinationDir
    appendix 'test' // Names the jar
}

buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.op.com/nexus/content/groups/public/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://repository.jboss.org/nexus/content/groups/public/" }
        maven { url "http://maven.ibiblio.org/maven2/" }
        maven { url "https://maven.atlassian.com/maven-external/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

repositories {
    mavenLocal()
    maven { url "http://maven.op.com/nexus/content/groups/public/" }
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "http://repository.jboss.org/nexus/content/groups/public/" }
    maven { url "http://maven.ibiblio.org/maven2/" }
    maven { url "https://maven.atlassian.com/maven-external/" }
}

configurations {
    provided
    compile.extendsFrom provided
}

ext {
}

dependencies {
    // scala
    provided "org.scala-lang:scala-library:2.11.12"
    provided "org.scala-lang:scala-compiler:2.11.12"
    provided "org.scala-lang:scala-reflect:2.11.12"

    // spark
    provided "org.apache.spark:spark-core_2.11:2.1.1"
    provided "org.apache.spark:spark-sql_2.11:2.1.1"
    provided "org.apache.spark:spark-hive_2.11:2.1.1"
    // others
    compile "org.apache.httpcomponents:httpclient:4.5.5"
    compile "commons-configuration:commons-configuration:1.10"
    compile "com.jayway.jsonpath:json-path:2.4.0"
//    compile "org.json4s:json4s-jackson_2.11:3.6.0"
    compile "com.typesafe.scala-logging:scala-logging_2.11:3.8.0"
    compile "com.github.nscala-time:nscala-time_2.11:2.20.0"

    compile "commons-beanutils:commons-beanutils:1.9.3"
    compile "org.apache.commons:commons-configuration2:2.2"

    compile "mysql:mysql-connector-java:6.0.6"

    testCompile 'junit:junit:4.12'
}

jar {
    dependsOn configurations.runtime
    zip64 true
    archiveName = "marlin.jar"
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)

        }
    }
    manifest {
        attributes 'Main-Class': 'com.weshare.marlin.Application'
//        attributes 'Main-Class': 'com.weshare.marlin.TestSpark'
    }

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

// jar {
//     manifest {
//         attributes 'Main-Class': 'AppDemo'
//     }
// }

// shadowJar {
//     zip64 true
//     version = '2.0'
//     dependencies {
//         include(dependency("com.weshare.sdk.alga:sdk-alga:$algaVersion"))
//         include(dependency("com.weshare.sdk.coral:sdk-coral:$coralVersion"))
//     }
// }

// artifacts {
//     shadowJar;
// }

// build.dependsOn(shadowJar);